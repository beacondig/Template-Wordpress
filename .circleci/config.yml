version: 2.1

#create a working directory
defaults: &defaults
  docker:
    - image: circleci/node:10.13.0
  working_directory: ~/wpengine-ci-template
# on install, you will need to run yarn install from the theme directory.  this will create the yarn.lock file
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: yarn-cache-{{ checksum "~/wpengine-ci-template/wp-content/themes/devtheme/yarn.lock" }}

      - restore_cache:
          key: node-modules-{{ checksum "~/wpengine-ci-template/wp-content/themes/devtheme/yarn.lock" }}

      - run:
          name: Install Dependencies
          working_directory: ~/wpengine-ci-template/wp-content/themes/devtheme
          command: |
            yarn install

      - save_cache:
          key: yarn-cache-{{ checksum "~/wpengine-ci-template/wp-content/themes/devtheme/yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-modules-{{ checksum "~/wpengine-ci-template/wp-content/themes/devtheme/yarn.lock" }}
          paths:
            - ~/wpengine-ci-template/wp-content/themes/devtheme/node_modules

      - run:
          name: Build
          working_directory: ~/wpengine-ci-template/wp-content/themes/devtheme
          command: |
            yarn run build

      - run:
          name: Update .gitignore files
          command: |
            find `pwd` -name '.gitignore' -print0 | while IFS= read -r -d $'\0' file; do
                echo $file
                sed -i -e 's/# ::: //g' $file
                sed -i -e '/.*::: cut :::*/,$d' $file
            done

      - persist_to_workspace:
          root: ~/wpengine-ci-template
          paths: .

  deploy_production:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/wpengine-ci-template

      - add_ssh_keys:
          fingerprints:
            - "77:43:50:2f:8e:64:f8:9c:e8:7c:25:08:e0:50:8b:e7"

      - deploy:
          command: |
            echo -e "\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null\n\tHostName git.wpengine.com\n\tUser git" >> ~/.ssh/config
            git config --global user.email "dennis@beacondigitalmarketing.com"
            git config --global user.name "Dennis Edson [circleci]"
            git clone git@git.wpengine.com:production/beacondig.git tmp_remote
            rm -rf .git
            mv tmp_remote/.git .git
            rm -rf tmp_remote
            git add -A
            git commit -m"deploy"
            git push origin master

  deploy_staging:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/wpengine-ci-template

      - add_ssh_keys:
          fingerprints:
            - "77:43:50:2f:8e:64:f8:9c:e8:7c:25:08:e0:50:8b:e7"

      - deploy:
          command: |
            echo -e "\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null\n\tHostName git.wpengine.com\n\tUser git" >> ~/.ssh/config
            git config --global user.email "dennis@beacondigitalmarketing.com"
            git config --global user.name "Dennis Edson [circleci]"
            git clone git@git.wpengine.com:production/avidxstaging.git tmp_remote
            rm -rf .git
            mv tmp_remote/.git .git
            rm -rf tmp_remote
            git add -A
            git commit -m"deploy"
            git push origin master

  deploy_dev:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/wpengine-ci-template

      - add_ssh_keys:
          fingerprints:
            - "77:43:50:2f:8e:64:f8:9c:e8:7c:25:08:e0:50:8b:e7"

      - deploy:
          command: |
            echo -e "\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null\n\tHostName git.wpengine.com\n\tUser git" >> ~/.ssh/config
            git config --global user.email "dennis@beacondigitalmarketing.com"
            git config --global user.name "avidhosting16-dennis"
            git clone git@git.wpengine.com:production/avidxdev.git tmp_remote
            rm -rf .git
            mv tmp_remote/.git .git
            rm -rf tmp_remote
            git add -A
            git commit -m "deploy"
            git push -f origin master

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy_production:
          requires:
              - build
          filters:
              branches:
                  only: master
      - deploy_staging:
          requires:
            - build
          filters:
            branches:
              only: /^release\/.*/
      - deploy_dev:
          requires:
            - build
          filters:
            branches:
              only: develop
